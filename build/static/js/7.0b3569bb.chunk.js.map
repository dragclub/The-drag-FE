{"version":3,"sources":["components/DealCreate/DealCreate.jsx"],"names":["dotenv","config","DealCreate","_ref","close","isValid","setisValid","useState","Visible","setVisible","input","setinput","deal1","setdeal1","deal2","setdeal2","deal3","setdeal3","deal4","setdeal4","_jsxs","className","children","_jsx","action","encType","method","onSubmit","e","async","preventDefault","document","getElementById","setAttribute","formdata","FormData","arr","checked","push","append","value","fetch","target","body","URLSearchParams","credentials","then","res","json","success","alert","message","window","location","reload","removeAttribute","handlesubmit","htmlFor","type","name","id","onMouseLeave","onMouseEnter","placeholder","Dropdown","func","entries","categories","setInput","data","add","length","str","idx","indexOf","slice","category","Input","min","onClick","inputMode","maxLength","onChange","tel","test","handlePhone","IoClose"],"mappings":"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","file":"static/js/7.0b3569bb.chunk.js","sourcesContent":["import React, {useState } from 'react'\r\nimport './DealCreate.css'\r\nimport categories from '../../assets/categories'\r\nimport dotenv from 'dotenv'\r\nimport Dropdown from '../Dropdown/Dropdown'\r\nimport { IoClose } from 'react-icons/io5'\r\n\r\n\r\ndotenv.config();\r\nconst DealCreate = ({ close }) => {\r\n\r\n    const [isValid, setisValid] = useState(true);\r\n    const [Visible, setVisible] = useState(false);\r\n    const [input, setinput] = useState(\"\");\r\n    const [deal1, setdeal1] = useState(false);\r\n    const [deal2, setdeal2] = useState(false);\r\n    const [deal3, setdeal3] = useState(false);\r\n    const [deal4, setdeal4] = useState(false);\r\n    const setInput = (data, add) => {\r\n        if (add) {\r\n            if (input.length === 0) {\r\n                setinput(data);\r\n            }\r\n            else {\r\n                setinput(input + \",\" + data);\r\n            }\r\n        }\r\n        else {\r\n            if (input.length > 0) {\r\n                let str = input, idx = input.indexOf(data);\r\n                if (idx > 0) {\r\n                    str = str.slice(0, idx - 1) + str.slice(idx + data.length);\r\n                }\r\n                else {\r\n                    str = str.slice(idx + data.length + 1);\r\n                }\r\n                setinput(str);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePhone = (e) => {\r\n        const tel = e.target.value;\r\n\r\n\r\n        if (tel.length === 10) {\r\n            const regex = /^[1-9][0-9]*$/;\r\n            if (!(regex.test(tel))) {\r\n                setisValid(false);\r\n            }\r\n            else setisValid(true);\r\n\r\n        }\r\n        else {\r\n            if (tel.length > 0) {\r\n                setisValid(false);\r\n            }\r\n            else setisValid(true);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const handlesubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n\r\n        if ((isValid)) {\r\n            document.getElementById('CreateDeal-btn').setAttribute('disabled', 'true');\r\n            const formdata = new FormData();\r\n            const arr = [];\r\n            if (document.getElementById('type1').checked) arr.push(\"Barter\");\r\n            if (document.getElementById('type2').checked) arr.push(\"Paid\");\r\n            if (document.getElementById('type3').checked) arr.push(\"Commission\");\r\n            if (document.getElementById(\"type4\").checked) arr.push(\"Job\");\r\n\r\n            formdata.append(\"name\", document.getElementById('username').value);\r\n            formdata.append(\"description\", document.getElementById('description').value);\r\n            formdata.append(\"creatorType\", document.getElementById('creatorType').value||\"Any Creator can Apply\");\r\n            formdata.append(\"followers\", document.getElementById('followers').value);\r\n            formdata.append(\"dealType\", arr);\r\n            formdata.append('mobile', document.getElementById('mobile').value);\r\n            formdata.append('socialMedia', document.getElementById('socialMedia').value)\r\n\r\n\r\n\r\n            fetch(e.target.action, {\r\n                method: e.target.method,\r\n                body: new URLSearchParams(formdata),\r\n                credentials: 'include',\r\n\r\n            }).then((res) => res.json()).then((res) => {\r\n                if (!res.success) {\r\n                    alert(res.message);\r\n\r\n                    document.getElementById('CreateDeal-btn').removeAttribute('disabled');\r\n                }\r\n                else {\r\n\r\n                    alert(res.message);\r\n                    window.location.reload();\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(`Mobile Number is Invalid`);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"CreateDeal-container\">\r\n        <h3>Enter Details</h3>\r\n        <form\r\n          action={`${process.env.REACT_APP_BASE_URL}v1/apis/deals`}\r\n          encType=\"multipart/form-data\"\r\n          method=\"post\"\r\n          onSubmit={(e) => {\r\n            handlesubmit(e);\r\n          }}\r\n        >\r\n          <div className=\"username1\">\r\n            <label htmlFor=\"username\">Company Name</label>\r\n            <input type=\"text\" name=\"name\" id=\"username\" />\r\n          </div>\r\n          <div className=\"description\">\r\n            <label htmlFor=\"description\">Description of the Deal</label>\r\n            <textarea id=\"description\" name=\"description\"></textarea>\r\n          </div>\r\n          <div className=\"creatorType\">\r\n            <label htmlFor=\"creatorType\">\r\n              What type of Creator/Influencer do you need?\r\n            </label>\r\n            <div className=\"creatorType-input\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"creatorType\"\r\n                id=\"creatorType\"\r\n                onMouseLeave={(e) => setVisible(false)}\r\n                onMouseEnter={(e) => setVisible(true)}\r\n                value={input}\r\n                placeholder=\"Select from the Options\"\r\n              ></input>\r\n\r\n              {Visible && (\r\n                <Dropdown\r\n                  func={(value) => setVisible(value)}\r\n                  entries={categories}\r\n                  setinput={setInput}\r\n                  category=\"creatorTypes\"\r\n                  close={close}\r\n                  Input={input}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"followers\">\r\n            <label htmlFor=\"folowers\">\r\n              Minimum Number of Followers that you want\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"followers\"\r\n              min={0}\r\n              name=\"followers\"\r\n              placeholder=\"Enter Number \"\r\n            ></input>\r\n          </div>\r\n          <div className=\"dealType\">\r\n            <label htmlFor=\"dealType\">\r\n              What type of deal do you want to do?\r\n            </label>\r\n            <div className=\"dealType-options\">\r\n              <div onClick={(e) => setdeal1(!deal1)}>\r\n                <input type=\"radio\" id=\"type1\" checked={deal1} /> <p>Barter</p>\r\n              </div>\r\n              <div onClick={(e) => setdeal2(!deal2)}>\r\n                <input type=\"radio\" id=\"type2\" checked={deal2} />\r\n                <p>Paid</p>\r\n              </div>\r\n              <div onClick={(e) => setdeal3(!deal3)}>\r\n                <input type=\"radio\" id=\"type3\" checked={deal3} />\r\n                <p>Commission</p>\r\n              </div>\r\n              <div onClick={(e) => setdeal4(!deal4)}>\r\n                <input type=\"radio\" id=\"type4\" checked={deal4} />\r\n                <p>Job</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"contact\">\r\n            <div className=\"mobile\">\r\n              <label htmlFor=\"mobile\">Mobile Number</label>\r\n              <input\r\n                type=\"tel\"\r\n                inputMode=\"tel\"\r\n                name=\"mobile\"\r\n                id=\"mobile\"\r\n                maxLength={10}\r\n                onChange={(e) => handlePhone(e)}\r\n                placeholder=\"Enter your Mobile number\"\r\n              />\r\n            </div>\r\n            <div className=\"socialMedia\">\r\n              <label htmlFor=\"socialMedia\">Social Media URL</label>\r\n              <input\r\n                type=\"url\"\r\n                name=\"socialMedia\"\r\n                id=\"socialMedia\"\r\n                placeholder=\"Enter Social Media Link\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" id=\"CreateDeal-btn\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <IoClose className=\"close\" onClick={()=>close()} />\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DealCreate;\r\n"],"sourceRoot":""}
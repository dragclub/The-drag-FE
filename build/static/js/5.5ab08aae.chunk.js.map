{"version":3,"sources":["components/Contact/Contact.jsx","components/Contact/ContactForm.jsx","components/CreatorCard/CreatorCard.jsx"],"names":["dotenv","config","ContactForm","_ref","email","name","close","_jsxs","className","children","_jsx","action","method","encType","onSubmit","e","async","document","getElementById","setAttribute","preventDefault","data","subject","value","body","attachment","files","creatormail","formdata","FormData","key","append","fetch","target","credentials","then","res","json","success","alert","message","window","location","reload","error","handleContact","htmlFor","type","id","placeholder","rows","IoClose","onClick","fontSize","CreatorCard","props","selectedFilter","setIsBlurred","image","instaurl","instacount","facebookurl","facebookcount","youtubeurl","youtubecount","twitterurl","twittercount","linkedinurl","linkedincount","totalsum","totalk","Math","floor","instasum","facebooksum","youtubesum","twittersum","linkedinsum","src","alt","href","rel","FaInstagram","FaFacebook","FaYoutube","FaLinkedin","FaTwitterSquare","sessionStorage","getItem","Popup","trigger","modal","onOpen","onClose","position"],"mappings":"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","file":"static/js/5.5ab08aae.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Contact.css'\r\nimport close_icon from '../../assets/close_icon.svg'\r\nimport dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nconst Contact = ({email,name,close}) => {\r\n \r\n    const handleContact=async (e)=>{\r\n        document.getElementById('email-btn').setAttribute('disabled','true');\r\n          e.preventDefault();\r\n          const data={\r\n            subject:document.getElementById('subject').value,\r\n            body:document.getElementById('body').value,\r\n            attachment:document.getElementById('attachment').files[0],\r\n            creatormail:email,\r\n         }\r\n         const formdata=new FormData();\r\n         for(let key in data){\r\n            formdata.append(key,data[key]);\r\n         }\r\n           await fetch(e.target.action,{\r\n            method:'post',\r\n            body:formdata,\r\n            credentials:'include'\r\n           }).then((res)=>res.json()).then((res)=>{\r\n            if(res.success){\r\n                alert(res.message);\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                alert(res.error||res.message);\r\n                window.location.reload();\r\n            }\r\n           })\r\n    }\r\n\r\n  return (\r\n    <div className='contact-container'>\r\n        <div className=\"email\">\r\n                <p>To:</p>\r\n                <p className='email-main'>{`${name} <${email}>`}</p>\r\n                \r\n            </div>\r\n        <form className='contact-form' action={`${process.env.REACT_APP_BASE_URL}v1/apis/contact`} method=\"post\" encType='multipart/form-data' onSubmit={(e)=>{\r\n            handleContact(e);\r\n           \r\n            }}>\r\n            \r\n            <div className=\"subject\">\r\n                <label htmlFor=\"subject\">Subject:</label>\r\n                <input type=\"text\" id='subject' name='subject' />\r\n            </div>\r\n            <div className=\"body\">\r\n                <label htmlFor=\"body\">Message:</label>\r\n               <textarea name=\"\" id=\"body\"    ></textarea>\r\n            </div>\r\n            <div className=\"attachment\">\r\n                <p>Attachment:</p>\r\n                <div>\r\n                <label htmlFor=\"attachment\">Drag Your Files Here <p style={{textAlign:'center'}}>Or</p></label>\r\n                <input type=\"file\" name=\"attachment\" id=\"attachment\"></input>\r\n                </div>\r\n                \r\n            </div>\r\n            <button type=\"submit\"  id='email-btn'>SEND</button>\r\n        </form>\r\n        <img src={close_icon} alt=\"\" width={40} height={40} onClick={close} style={{cursor:'pointer'}}/>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from \"react\";\r\nimport \"./ContactFrom.css\";\r\nimport close_icon from \"../../assets/close_icon.svg\";\r\nimport dotenv from \"dotenv\";\r\nimport { IoClose } from \"react-icons/io5\";\r\ndotenv.config();\r\n\r\nconst ContactForm = ({ email, name, close }) => {\r\n  const handleContact = async (e) => {\r\n    document.getElementById(\"email-btn\").setAttribute(\"disabled\", \"true\");\r\n    e.preventDefault();\r\n    const data = {\r\n      subject: document.getElementById(\"subject\").value,\r\n      body: document.getElementById(\"body\").value,\r\n      attachment: document.getElementById(\"attachment\").files[0],\r\n      creatormail: email,\r\n    };\r\n    const formdata = new FormData();\r\n    for (let key in data) {\r\n      formdata.append(key, data[key]);\r\n    }\r\n    await fetch(e.target.action, {\r\n      method: \"post\",\r\n      body: formdata,\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success) {\r\n          alert(res.message);\r\n          window.location.reload();\r\n        } else {\r\n          alert(res.error || res.message);\r\n          window.location.reload();\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <div className=\"email\">\r\n        <p>To:</p>\r\n        <p className=\"email-main\">{`${name}`}</p>\r\n      </div>\r\n      <form\r\n        className=\"contact-form\"\r\n        action={`${process.env.REACT_APP_BASE_URL}v1/apis/contact`}\r\n        method=\"post\"\r\n        encType=\"multipart/form-data\"\r\n        onSubmit={(e) => {\r\n          handleContact(e);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"subject\">Subject:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            placeholder=\"Enter the subject\"\r\n            className=\"contact-input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"body\">Message:</label>\r\n          <textarea\r\n            id=\"body\"\r\n            name=\"body\"\r\n            placeholder=\"Write your message here...\"\r\n            rows=\"5\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"form-group attachment\">\r\n          <p>Attachment:</p>\r\n          <label htmlFor=\"attachment\" className=\"file-label\">\r\n            Upload Your Files Here\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"attachment\"\r\n            id=\"attachment\"\r\n            className=\"contact-file\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id=\"email-btn\">\r\n          SEND\r\n        </button>\r\n      </form>\r\n      {/* <img\r\n        src={close_icon}\r\n        alt=\"Close\"\r\n        className=\"close-icon\"\r\n        onClick={close}\r\n      /> */}\r\n      <div className=\"close-icon\">\r\n        <IoClose onClick={close} fontSize={24}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","\r\nimport React from \"react\";\r\nimport \"./CreatorCard.css\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport {\r\n  FaInstagram,\r\n  FaFacebook,\r\n  FaYoutube,\r\n  FaLinkedin,\r\n  FaTwitterSquare,\r\n} from \"react-icons/fa\";\r\nimport ContactForm from \"../Contact/ContactForm\";\r\n\r\nconst CreatorCard = ({ props, selectedFilter, setIsBlurred }) => {\r\n  const {\r\n    name,\r\n    image,\r\n    email,\r\n    instaurl,\r\n    instacount,\r\n    facebookurl,\r\n    facebookcount,\r\n    youtubeurl,\r\n    youtubecount,\r\n    twitterurl,\r\n    twittercount,\r\n    linkedinurl,\r\n    linkedincount,\r\n  } = props;\r\n\r\n  const totalsum =\r\n    instacount + facebookcount + youtubecount + twittercount + linkedincount;\r\n  const totalk = Math.floor(totalsum / 1000);\r\n  const instasum = Math.floor(instacount / 1000);\r\n  const facebooksum = Math.floor(facebookcount / 1000);\r\n  const youtubesum = Math.floor(youtubecount / 1000);\r\n  const twittersum = Math.floor(twittercount / 1000);\r\n  const linkedinsum = Math.floor(linkedincount / 1000);\r\n  return (\r\n    <div className=\"creator-card\">\r\n      <img src={image} alt={name} className=\"creator-image\" />\r\n      <div className=\"creator-info\">\r\n        <div className=\"creator\">\r\n          <div className=\"creator-total\">\r\n            <h3 className=\"creator-name\">{name}</h3>\r\n            <p className=\"total-followers\">\r\n              {selectedFilter === \"all\" || selectedFilter === \"\"\r\n                ? `Total Followers ${totalk ? `${totalk}K` : totalsum}`\r\n                : selectedFilter === \"insta\"\r\n                ? `Instagram Followers ${\r\n                    instasum ? `${instasum}K` : instacount\r\n                  }`\r\n                : selectedFilter === \"linkedin\"\r\n                ? `LinkedIn Followers ${\r\n                    linkedinsum ? `${linkedinsum}K` : linkedincount\r\n                  }`\r\n                : selectedFilter === \"facebook\"\r\n                ? `Facebook Followers ${\r\n                    facebooksum ? `${facebooksum}K` : facebookcount\r\n                  }`\r\n                : selectedFilter === \"twitter\"\r\n                ? `Twitter Followers ${\r\n                    twittersum ? `${twittersum}K` : twittercount\r\n                  }`\r\n                : selectedFilter === \"youtube\"\r\n                ? `YouTube Followers ${\r\n                    youtubesum ? `${youtubesum}K` : youtubecount\r\n                  }`\r\n                : null}\r\n            </p>\r\n          </div>\r\n          {/* <div className=\"highest\">\r\n            <p className=\"follower\"> {totalk}</p>\r\n            <p className=\"platform\">Instagram</p>\r\n          </div> */}\r\n        </div>\r\n\r\n        <div className=\"contact\">\r\n          <div className=\"social-icons\">\r\n            {instaurl && (\r\n              <a href={instaurl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FaInstagram />\r\n              </a>\r\n            )}\r\n            {facebookurl && (\r\n              <a href={facebookurl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FaFacebook />\r\n              </a>\r\n            )}\r\n            {youtubeurl && (\r\n              <a href={youtubeurl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FaYoutube />\r\n              </a>\r\n            )}\r\n            {linkedinurl && (\r\n              <a href={youtubeurl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FaLinkedin />\r\n              </a>\r\n            )}\r\n            {twitterurl && (\r\n              <a href={youtubeurl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FaTwitterSquare />\r\n              </a>\r\n            )}\r\n          </div>\r\n          {sessionStorage.getItem(\"State\") === \"logout\" ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"contact-btn\"\r\n              onClick={() => alert(\"Please Login First!\")}\r\n            >\r\n              Contact\r\n            </button>\r\n          ) : (\r\n            <Popup\r\n              trigger={<button className=\"contact-btn\">Contact</button>}\r\n              modal\r\n              onOpen={() => setIsBlurred(true)}\r\n              onClose={() => setIsBlurred(false)}\r\n              position=\"top center\"\r\n            >\r\n              {(close) => (\r\n                <ContactForm email={email} name={name} close={close} />\r\n              )}\r\n            </Popup>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatorCard;\r\n\r\n"],"sourceRoot":""}